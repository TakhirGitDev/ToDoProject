// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.Services.ToDoAPI.DbContexts;

namespace ToDo.Services.ToDoAPI.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    [Migration("20240213140207_InitialCreateDb")]
    partial class InitialCreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.Services.ToDoAPI.Models.Status", b =>
                {
                    b.Property<int>("Status_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statusId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnName("statusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Status_Id")
                        .HasName("status_pkey");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Status_Id = 1,
                            StatusName = "Создана"
                        },
                        new
                        {
                            Status_Id = 2,
                            StatusName = "В работе"
                        },
                        new
                        {
                            Status_Id = 3,
                            StatusName = "Завершена"
                        });
                });

            modelBuilder.Entity("ToDo.Services.ToDoAPI.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("task_pkey");

                    b.HasIndex("StatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ToDo.Services.ToDoAPI.Models.Task", b =>
                {
                    b.HasOne("ToDo.Services.ToDoAPI.Models.Status", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
